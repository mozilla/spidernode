{"version":3,"sources":["getBorderCharacters.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kBAyBe,UAAC,IAAD,EAAU;AACrB,QAAI,SAAS,WAAb,EAA0B;AACtB,eAAO;AACH,qBAAS,GADN;AAEH,qBAAS,GAFN;AAGH,qBAAS,GAHN;AAIH,sBAAU,GAJP;;AAMH,wBAAY,GANT;AAOH,wBAAY,GAPT;AAQH,wBAAY,GART;AASH,yBAAa,GATV;;AAWH,sBAAU,GAXP;AAYH,uBAAW,GAZR;AAaH,sBAAU,GAbP;;AAeH,sBAAU,GAfP;AAgBH,sBAAU,GAhBP;AAiBH,uBAAW,GAjBR;AAkBH,sBAAU;AAlBP,SAAP;AAoBH;;AAED,QAAI,SAAS,MAAb,EAAqB;AACjB,eAAO;AACH,qBAAS,GADN;AAEH,qBAAS,GAFN;AAGH,qBAAS,GAHN;AAIH,sBAAU,GAJP;;AAMH,wBAAY,GANT;AAOH,wBAAY,GAPT;AAQH,wBAAY,GART;AASH,yBAAa,GATV;;AAWH,sBAAU,GAXP;AAYH,uBAAW,GAZR;AAaH,sBAAU,GAbP;;AAeH,sBAAU,GAfP;AAgBH,sBAAU,GAhBP;AAiBH,uBAAW,GAjBR;AAkBH,sBAAU;AAlBP,SAAP;AAoBH;;AAED,QAAI,SAAS,OAAb,EAAsB;AAClB,eAAO;AACH,qBAAS,GADN;AAEH,qBAAS,GAFN;AAGH,qBAAS,GAHN;AAIH,sBAAU,GAJP;;AAMH,wBAAY,GANT;AAOH,wBAAY,GAPT;AAQH,wBAAY,GART;AASH,yBAAa,GATV;;AAWH,sBAAU,GAXP;AAYH,uBAAW,GAZR;AAaH,sBAAU,GAbP;;AAeH,sBAAU,GAfP;AAgBH,sBAAU,GAhBP;AAiBH,uBAAW,GAjBR;AAkBH,sBAAU;AAlBP,SAAP;AAoBH;;AAED,QAAI,SAAS,MAAb,EAAqB;AACjB,eAAO;AACH,qBAAS,EADN;AAEH,qBAAS,EAFN;AAGH,qBAAS,EAHN;AAIH,sBAAU,EAJP;;AAMH,wBAAY,EANT;AAOH,wBAAY,EAPT;AAQH,wBAAY,EART;AASH,yBAAa,EATV;;AAWH,sBAAU,EAXP;AAYH,uBAAW,EAZR;AAaH,sBAAU,EAbP;;AAeH,sBAAU,EAfP;AAgBH,sBAAU,EAhBP;AAiBH,uBAAW,EAjBR;AAkBH,sBAAU;AAlBP,SAAP;AAoBH;;AAED,UAAM,IAAI,KAAJ,CAAU,oCAAV,CAAN;AACH,C","file":"getBorderCharacters.js","sourcesContent":["/* eslint-disable sorting/sort-object-props */\n\n/**\n * @typedef border\n * @property {string} topBody\n * @property {string} topJoin\n * @property {string} topLeft\n * @property {string} topRight\n * @property {string} bottomBody\n * @property {string} bottomJoin\n * @property {string} bottomLeft\n * @property {string} bottomRight\n * @property {string} bodyLeft\n * @property {string} bodyRight\n * @property {string} bodyJoin\n * @property {string} joinBody\n * @property {string} joinLeft\n * @property {string} joinRight\n * @property {string} joinJoin\n */\n\n/**\n * @param {string} name\n * @returns {border}\n */\nexport default (name) => {\n    if (name === 'honeywell') {\n        return {\n            topBody: '═',\n            topJoin: '╤',\n            topLeft: '╔',\n            topRight: '╗',\n\n            bottomBody: '═',\n            bottomJoin: '╧',\n            bottomLeft: '╚',\n            bottomRight: '╝',\n\n            bodyLeft: '║',\n            bodyRight: '║',\n            bodyJoin: '│',\n\n            joinBody: '─',\n            joinLeft: '╟',\n            joinRight: '╢',\n            joinJoin: '┼'\n        };\n    }\n\n    if (name === 'norc') {\n        return {\n            topBody: '─',\n            topJoin: '┬',\n            topLeft: '┌',\n            topRight: '┐',\n\n            bottomBody: '─',\n            bottomJoin: '┴',\n            bottomLeft: '└',\n            bottomRight: '┘',\n\n            bodyLeft: '│',\n            bodyRight: '│',\n            bodyJoin: '│',\n\n            joinBody: '─',\n            joinLeft: '├',\n            joinRight: '┤',\n            joinJoin: '┼'\n        };\n    }\n\n    if (name === 'ramac') {\n        return {\n            topBody: '-',\n            topJoin: '+',\n            topLeft: '+',\n            topRight: '+',\n\n            bottomBody: '-',\n            bottomJoin: '+',\n            bottomLeft: '+',\n            bottomRight: '+',\n\n            bodyLeft: '|',\n            bodyRight: '|',\n            bodyJoin: '|',\n\n            joinBody: '-',\n            joinLeft: '|',\n            joinRight: '|',\n            joinJoin: '|'\n        };\n    }\n\n    if (name === 'void') {\n        return {\n            topBody: '',\n            topJoin: '',\n            topLeft: '',\n            topRight: '',\n\n            bottomBody: '',\n            bottomJoin: '',\n            bottomLeft: '',\n            bottomRight: '',\n\n            bodyLeft: '',\n            bodyRight: '',\n            bodyJoin: '',\n\n            joinBody: '',\n            joinLeft: '',\n            joinRight: '',\n            joinJoin: ''\n        };\n    }\n\n    throw new Error('Unknown border template \"${name}\".');\n};\n"]}